spring:
  profiles:
    active: dev
  application:
    name: echoDispatch
  datasource:
    url: jdbc:mysql://${EchoDispatch.database.ip:EchoDispatch-mysql}:${EchoDispatch.database.port:3306}/echo_dispatch?useSSL=false
    username: ${EchoDispatch.database.username:root}
    password: ${EchoDispatch.database.password:1234}
    driver-class-name: com.mysql.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 10
      maximum-pool-size: 30
      auto-commit: true
      pool-name: HikariCP
      idle-timeout: 3000
      validation-timeout: 1000
      connection-timeout: 10000
  kafka:
    bootstrap-servers: ${EchoDispatch.kafka.ip:EchoDispatch-kafka}:${EchoDispatch.kafka.port:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 5
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 1000
      auto-offset-reset: earliest
      group-id: ed
    streams:
      replication-factor: 1
  rabbitmq:
    host: ${EchoDispatch.rabbitmq.ip:EchoDispatch-rabbitmq}
    port: ${EchoDispatch.rabbitmq.port:5672}
    stream:
      virtual-host: /
  data:
    redis:
      host: ${EchoDispatch.redis.host:EchoDispatch-redis}
      port: ${EchoDispatch.redis.port:6379}
      password: ${EchoDispatch.redis.password:redis}
#server:
#  port: 8080
mybatis-plus:
  type-aliases-package: com.nia.echoDispatch.support.domain
  configuration:
    map-underscore-to-camel-case: true # 开启下划线和驼峰映射

# 监控配置
management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  prometheus:
    metrics:
      export:
        pushgateway:
          enabled: true


EchoDispatch:
  mq:
    topic: ed-topic
    pipeline: rabbitMQ
  rabbitmq:
    exchange: ed-exchange
    queue: ed-queue
    key: ed-Key
  redis:
    key:
      deduplication: deduplication.